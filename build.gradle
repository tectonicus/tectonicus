plugins {
	id 'application'
	id 'org.ajoberstar.grgit' version '4.1.1'
	id 'com.github.johnrengelman.shadow' version '7.1.1'
	id 'maven-publish'
}

project.version = '2.28.7'

//Exclude unneeded tasks
project.gradle.startParameter.excludedTaskNames.addAll(["jar", "distTar", "distZip", "shadowDistTar"])

java {
	toolchain {
		languageVersion.set(JavaLanguageVersion.of(8))
	}
}

mainClassName = "tectonicus.TectonicusApp"

repositories {
	mavenCentral()
}

dependencies {
	def lwjglVersion = "3.3.0"
	def picocliVersion = "4.6.2"
	def lombokVersion = "1.18.22"
	def junitVersion = "5.8.2"
	def log4jVersion = "2.17.1"

	implementation platform("org.lwjgl:lwjgl-bom:$lwjglVersion")
	implementation("org.lwjgl:lwjgl",
				   "org.lwjgl:lwjgl-opengl",
				   "org.lwjgl:lwjgl-egl",
				   "org.lwjgl:lwjgl-glfw",
				   'org.apache.commons:commons-text:1.9',
				   'org.joml:joml:1.10.3',
				   "info.picocli:picocli:$picocliVersion@jar",
				   "org.jogamp.jogl:jogl-all:2.3.2",
				   "com.fasterxml.jackson.core:jackson-databind:2.13.1",
				   "org.apache.logging.log4j:log4j-api:$log4jVersion",
				   "org.apache.logging.log4j:log4j-core:$log4jVersion")
	implementation files ('libs/jnbt.jar', 'libs/jpct.jar', 'libs/ProcessingCore.jar', 'libs/BiomeExtractor.jar')
	shadow "org.apache.logging.log4j:log4j-core:$log4jVersion"
	runtimeOnly("org.lwjgl:lwjgl::natives-windows",
				"org.lwjgl:lwjgl-glfw::natives-windows",
				"org.lwjgl:lwjgl-opengl::natives-windows",
				"org.lwjgl:lwjgl::natives-macos",
				"org.lwjgl:lwjgl-glfw::natives-macos",
				"org.lwjgl:lwjgl-opengl::natives-macos",
				"org.lwjgl:lwjgl::natives-linux",
				"org.lwjgl:lwjgl-glfw::natives-linux",
				"org.lwjgl:lwjgl-opengl::natives-linux")

	compileOnly "org.projectlombok:lombok:$lombokVersion"
	annotationProcessor("org.projectlombok:lombok:$lombokVersion",
						"info.picocli:picocli-codegen:$picocliVersion")
	
	testImplementation("org.junit.jupiter:junit-jupiter-api:$junitVersion",
					   'org.hamcrest:hamcrest:2.2')
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junitVersion"
	testCompileOnly "org.projectlombok:lombok:$lombokVersion"
	testAnnotationProcessor "org.projectlombok:lombok:$lombokVersion"
}

shadowJar {
	archivesBaseName = "Tectonicus"
	archiveClassifier.set("")

	doFirst {
		def props = new Properties()
		props.setProperty('buildDate', new Date().format('MMMM dd yyyy'))
		props.setProperty('buildTime', new Date().format('hhmm'))
		props.setProperty('buildNumber', grgit.log().size().toString())
		props.setProperty('version', "${project.version}")
		def writer = new FileWriter(file('build/resources/main/tectonicus.buildInfo'))
		props.store(writer, 'Tectonicus build info')
		writer.flush()
		writer.close()
	}

	exclude ('processing/**', 'com/threed/**')
	minimize {
		exclude(dependency('com.fasterxml.jackson.core:jackson-databind:.*'))
	}
}

distributions {
	shadow {
		distributionBaseName = archivesBaseName
		contents {
			from files('Data/defaultBlockConfig.xml')
			from('Docs') {
				include('*.xml', '*.txt')
				exclude('notes.txt')
			}
		}
	}
}

//This is to enable the generatePomFileForReleasePublication task which we use to
//generate a pom file for the Github dependency graph
publishing.publications.create("release", MavenPublication) {
	from components.java
}

test {
    useJUnitPlatform()
}
