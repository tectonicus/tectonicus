/*
 * Copyright (c) 2024 Tectonicus contributors.  All rights reserved.
 *
 * This file is part of Tectonicus. It is subject to the license terms in the LICENSE file found in
 * the top-level directory of this distribution.  The full list of project contributors is contained
 * in the AUTHORS file found in the same location.
 *
 */

import java.time.ZonedDateTime

plugins {
	id "application"
	id "org.ajoberstar.grgit" version "5.2.2"
	id("io.github.goooler.shadow") version "8.1.7"
	id "maven-publish"
}

project.version = "2.30.2"

//Exclude unneeded tasks
project.gradle.startParameter.excludedTaskNames.addAll(["jar", "distTar", "distZip", "shadowDistTar"])

java {
	toolchain {
		languageVersion.set(JavaLanguageVersion.of(11))
	}
}

application {
	mainClass = "tectonicus.TectonicusApp"
}

repositories {
	mavenCentral()
}

dependencies {
	def lwjglVersion = "3.3.3"
	def picocliVersion = "4.7.6"
	def lombokVersion = "1.18.34"
	def junitVersion = "5.10.2"
	def caffeineVersion = "3.1.8"

	implementation platform("org.lwjgl:lwjgl-bom:$lwjglVersion")
	implementation("org.lwjgl:lwjgl",
				   "org.lwjgl:lwjgl-opengl",
				   "org.lwjgl:lwjgl-egl",
				   "org.lwjgl:lwjgl-glfw",
				   "org.apache.commons:commons-text:1.12.0",
				   "org.joml:joml:1.10.5",
				   "info.picocli:picocli:$picocliVersion@jar",
				   "org.jogamp.jogl:jogl-all:2.3.2",
				   "com.fasterxml.jackson.core:jackson-databind:2.17.1",
				   "ch.qos.logback:logback-classic:1.5.6",
				   "com.h2database:h2-mvstore:2.2.224",
				   "com.github.ben-manes.caffeine:caffeine:$caffeineVersion",
				   "org.sejda.imageio:webp-imageio:0.1.6")
	implementation files ("libs/jnbt.jar", "libs/jpct.jar", "libs/ProcessingCore.jar", "libs/BiomeExtractor.jar")

	runtimeOnly("org.lwjgl:lwjgl::natives-windows",
				"org.lwjgl:lwjgl-glfw::natives-windows",
				"org.lwjgl:lwjgl-opengl::natives-windows",
				"org.lwjgl:lwjgl::natives-macos",
				"org.lwjgl:lwjgl-glfw::natives-macos",
				"org.lwjgl:lwjgl-opengl::natives-macos",
				"org.lwjgl:lwjgl::natives-linux",
				"org.lwjgl:lwjgl-glfw::natives-linux",
				"org.lwjgl:lwjgl-opengl::natives-linux")

	compileOnly "org.projectlombok:lombok:$lombokVersion"
	annotationProcessor("org.projectlombok:lombok:$lombokVersion",
						"info.picocli:picocli-codegen:$picocliVersion")
	
	testImplementation("org.junit.jupiter:junit-jupiter-api:$junitVersion",
					   "org.hamcrest:hamcrest:2.2")
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junitVersion"
	testCompileOnly "org.projectlombok:lombok:$lombokVersion"
	testAnnotationProcessor "org.projectlombok:lombok:$lombokVersion"
}

shadowJar {
	archiveClassifier.set("")

	doFirst {
		def props = new Properties()
		props.setProperty("buildDateTime", ZonedDateTime.now().toString())
		props.setProperty("buildNumber", grgit.log().size().toString() + "-" + grgit.head().abbreviatedId)
		props.setProperty("version", "${project.version}")
		def writer = new FileWriter(file("build/resources/main/tectonicus.buildInfo"))
		props.store(writer, "Tectonicus build info")
		writer.flush()
		writer.close()
	}

	exclude ("processing/**", "com/threed/**")
	minimize {
		exclude(dependency("com.fasterxml.jackson.core:jackson-databind:.*"))
		exclude(dependency("com.github.ben-manes.caffeine:caffeine:.*"))
		exclude(dependency("org.apache.logging.log4j:log4j-core:.*"))
		exclude(dependency("ch.qos.logback:logback-classic:.*"))
		exclude(dependency("org.sejda.imageio:webp-imageio:.*"))
	}
}

distributions {
	shadow {
		distributionBaseName = project.name
		contents {
			from files("src/main/resources/defaultBlockConfig.xml")
			from("Docs") {
				include("*.xml", "*.txt")
				exclude("notes.txt")
			}
		}
	}
}

//This is to enable the generatePomFileForReleasePublication task which we use to
//generate a pom file for the Github dependency graph
publishing.publications.create("release", MavenPublication) {
	from components.java
}

test {
    useJUnitPlatform()
}